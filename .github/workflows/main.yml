---

name: GPT Code Review on Entire PR Diff

on:
  pull_request:
    types: [opened, reopened, synchronize]
  workflow_dispatch:
    inputs:
      pr_number:
        description: "PR number to review"
        required: true

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # PR 전체 diff 추출
      - name: Fetch PR Diff
        run: |
          git fetch origin +refs/pull/${{ github.event.pull_request.number }}/merge
          git diff origin/${{ github.event.pull_request.base.ref }}...origin/${{ github.event.pull_request.head.ref }} > pr_diff.txt

      # code-review-prompt.txt 파일 읽기
      - name: Read Prompt file
        id: prompt
        uses: juliangruber/read-file-action@v1
        with:
          path: ./.github/workflows/code-review-prompt.txt

      # PR diff 읽기
      - name: Read PR Diff
        id: diff
        uses: juliangruber/read-file-action@v1
        with:
          path: ./pr_diff.txt

      # prompt와 diff를 합쳐 하나의 combined_prompt.txt 파일 생성
      - name: Combine Prompt and Diff
        run: |
          printf "%s\n" "${{ steps.prompt.outputs.content }}" > combined_prompt.txt
          printf "\n" >> combined_prompt.txt
          printf "----- PR DIFF START -----\n" >> combined_prompt.txt
          printf "%s\n" "${{ steps.diff.outputs.content }}" >> combined_prompt.txt
          printf "----- PR DIFF END -----\n" >> combined_prompt.txt

      # curl을 이용하여 OpenAI API 호출
      - name: Run GPT Code Review Once via curl
        run: |
          RESPONSE=$(curl https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -d '{
              "model": "gpt-4o-mini",
              "messages": [
                {
                  "role": "system",
                  "content": "You are a senior developer experienced in Next.js, TypeScript, clean architecture, and SOLID principles, providing a thorough code review based on the given instructions."
                },
                {
                  "role": "user",
                  "content": "'"$(cat combined_prompt.txt | sed 's/"/\\"/g')"'"
                }
              ],
              "temperature": 0.7,
              "max_tokens": 16384
            }')

          # OpenAI 응답 출력 (JSON 파싱은 필요에 따라 진행)
          echo "$RESPONSE"
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
